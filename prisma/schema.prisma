generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String
  image         String?
  email         String    @unique
  emailVerified DateTime?
  password      String
  role          Role      @default(USER)
  sessions      Session[]
  Booking       Booking[]
}

model Location {
  id                  Int    @id @default(autoincrement())
  name                String
  SourceLocation      Flight @relation("Source", fields: [sourceId], references: [id])
  sourceId            Int
  DestinationLocation Flight @relation("Destination", fields: [destinationId], references: [id])
  destinationId       Int
}

model Flight {
  id          Int        @id @default(autoincrement())
  name        String
  Source      Location[] @relation("Source")
  Destination Location[] @relation("Destination")
  departure   DateTime
  arrival     DateTime
  Seat        Seat[]
  Booking     Booking[]
}

model Seat {
  id     Int    @id @default(autoincrement())
  name   String
  Flight Flight @relation(fields: [flightId], references: [id])

  flightId Int
}

model Booking {
  id       Int    @id @default(autoincrement())
  name     String
  Flight   Flight @relation(fields: [flightId], references: [id])
  flightId Int
  User     User   @relation(fields: [userId], references: [id])
  userId   String
}

enum Role {
  ADMIN
  USER
}
